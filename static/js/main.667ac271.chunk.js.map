{"version":3,"sources":["components/shape/Shape.module.scss","components/logo/Logo.module.scss","components/autoscroller/AutoScroller.module.scss","components/transformContainer/TransformContainer.module.scss","App.module.scss","components/logo/index.ts","components/logo/Logo.tsx","components/transformContainer/index.ts","components/transformContainer/TransformContainer.tsx","components/autoscroller/index.ts","components/autoscroller/AutoScroller.tsx","components/shape/Shape.tsx","components/shape/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Logo","breakText","text","replace","className","classnames","STYLES","glitch","glitchWhite","glitchMagenta","glitchCyan","TransformContainer","rotate","skew","top","left","children","style","transform","AutoScroller","width","height","leftChildren","rightChildren","fast","scroller","right","rangeUnits","start","end","suffix","Math","floor","random","randomFrom","array","length","shapeColours","randomColour","lineFunction","backgroundColor","Shape","shapeFunctions","size","borderColor","square","circle","xStyle","x","a","b","createShapes","numShapes","shapes","Array","map","slice","App","leftFast","rightFast","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.667ac271.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Shape\":\"Shape_Shape__2hADU\",\"square\":\"Shape_square__2EKOa\",\"circle\":\"Shape_circle__1TPk8\",\"x\":\"Shape_x__18tix\",\"a\":\"Shape_a__tgUo6\",\"b\":\"Shape_b__2VjlR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__1m6CK\",\"glitch\":\"Logo_glitch__jOGjH\",\"glitchCyan\":\"Logo_glitchCyan__O9imx\",\"shift-1\":\"Logo_shift-1__2B2Cb\",\"glitchMagenta\":\"Logo_glitchMagenta__2GgfB\",\"shift-2\":\"Logo_shift-2__2dCPT\",\"glitchWhite\":\"Logo_glitchWhite__2WCFI\",\"shift-3\":\"Logo_shift-3__11NHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AutoScroller\":\"AutoScroller_AutoScroller__3twB4\",\"fast\":\"AutoScroller_fast__1_ktB\",\"scroller\":\"AutoScroller_scroller__QklUl\",\"left\":\"AutoScroller_left__3ZPfp\",\"leftShift\":\"AutoScroller_leftShift__2NLGB\",\"right\":\"AutoScroller_right__219il\",\"rightShift\":\"AutoScroller_rightShift__GSrA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TransformContainer\":\"TransformContainer_TransformContainer__OfdXH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\"};","import Logo from \"./Logo\";\n\nexport default Logo;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport STYLES from \"./Logo.module.scss\";\n\ninterface LogoProps {\n  text: string;\n}\n\nconst Logo = ({ text }: LogoProps) => {\n  const breakText = text.replace(/\\\\n/g, \"\\n\");\n  return (\n    <div className={classnames(STYLES.Logo)}>\n      {breakText}\n      <div className={classnames(STYLES.glitch, STYLES.glitchWhite)}>\n        {breakText}\n      </div>\n      <div className={classnames(STYLES.glitch, STYLES.glitchMagenta)}>\n        {breakText}\n      </div>\n      <div className={classnames(STYLES.glitch, STYLES.glitchCyan)}>\n        {breakText}\n      </div>\n    </div>\n  );\n};\n\nexport default Logo;\n","import TransformContainer from \"./TransformContainer\";\n\nexport default TransformContainer;\n","import React from \"react\";\n\nimport STYLES from \"./TransformContainer.module.scss\";\n\ninterface TransformContainerProps {\n  rotate?: number;\n  skew?: number;\n  top?: string;\n  left?: string;\n  children: JSX.Element | JSX.Element[];\n}\n\nconst TransformContainer = ({\n  rotate = 0,\n  skew = 0,\n  top = \"0\",\n  left = \"0\",\n  children\n}: TransformContainerProps) => {\n  return (\n    <div\n      className={STYLES.TransformContainer}\n      style={{ transform: `skew(${skew}deg) rotate(${rotate}deg)`, top, left }}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default TransformContainer;\n","import AutoScroller from \"./AutoScroller\";\n\nexport default AutoScroller;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport STYLES from \"./AutoScroller.module.scss\";\n\ninterface AutoScrollerProps {\n  width: string;\n  height: string;\n  leftChildren: JSX.Element | JSX.Element[];\n  rightChildren: JSX.Element | JSX.Element[];\n  fast?: boolean;\n}\n\nconst AutoScroller = ({\n  width,\n  height,\n  leftChildren,\n  rightChildren,\n  fast = false\n}: AutoScrollerProps) => {\n  return (\n    <div\n      className={classnames(STYLES.AutoScroller, { [STYLES.fast]: fast })}\n      style={{ width, height }}\n    >\n      <div className={STYLES.scroller}>\n        <div className={STYLES.left}>{leftChildren}</div>\n        <div className={STYLES.right}>{rightChildren}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default AutoScroller;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nimport STYLES from \"./Shape.module.scss\";\n\nconst rangeUnits = (start: number, end: number, suffix: string = \"px\") => {\n  return `${Math.floor(Math.random() * (end - start)) + start}${suffix}`;\n};\nconst randomFrom = <T extends any>(array: T[]) => {\n  return array[Math.floor(Math.random() * array.length)];\n};\n\nconst shapeColours = [\"magenta\", \"cyan\", \"blue\"];\nconst randomColour = () => randomFrom(shapeColours);\n\nconst lineFunction = () => {\n  const style = {\n    left: rangeUnits(0, 100, \"%\"),\n    top: rangeUnits(0, 100, \"%\"),\n    width: rangeUnits(25, 125),\n    height: rangeUnits(2, 10),\n    backgroundColor: randomColour()\n  };\n  return <div className={STYLES.Shape} style={style} />;\n};\n\nconst shapeFunctions = [\n  () => {\n    const size = rangeUnits(10, 30);\n    const style = {\n      left: rangeUnits(0, 100, \"%\"),\n      top: rangeUnits(0, 100, \"%\"),\n      width: size,\n      height: size,\n      borderColor: randomColour()\n    };\n    return (\n      <div className={classnames(STYLES.Shape, STYLES.square)} style={style} />\n    );\n  },\n  () => {\n    const size = rangeUnits(10, 40);\n    const style = {\n      left: rangeUnits(0, 100, \"%\"),\n      top: rangeUnits(0, 100, \"%\"),\n      width: size,\n      height: size,\n      borderColor: randomColour()\n    };\n    return (\n      <div className={classnames(STYLES.Shape, STYLES.circle)} style={style} />\n    );\n  },\n  () => {\n    const style = {\n      left: rangeUnits(0, 100, \"%\"),\n      top: rangeUnits(0, 100, \"%\"),\n      width: \"40px\",\n      height: \"5px\"\n    };\n    const xStyle = {\n      backgroundColor: randomColour()\n    };\n    return (\n      <div className={classnames(STYLES.Shape, STYLES.x)} style={style}>\n        <div className={STYLES.a} style={xStyle} />\n        <div className={STYLES.b} style={xStyle} />\n      </div>\n    );\n  }\n];\n\nconst Shape = () => {\n  return randomFrom([lineFunction, lineFunction, randomFrom(shapeFunctions)])();\n};\n\nexport default Shape;\n","import Shape from \"./Shape\";\n\nexport default Shape;\n","import React from \"react\";\nimport Logo from \"./components/logo\";\nimport TransformContainer from \"./components/transformContainer\";\n\nimport STYLES from \"./App.module.scss\";\nimport AutoScroller from \"./components/autoscroller\";\nimport Shape from \"./components/shape\";\n\nconst createShapes = (numShapes: number) => {\n  const shapes: JSX.Element[] = [...Array(numShapes)].map(() => <Shape />);\n  const left = shapes.slice(0, numShapes / 2);\n  const right = shapes.slice(numShapes / 2 + 1);\n  return [left, right];\n};\n\nconst App: React.FC = () => {\n  // Create some shapes!\n  const [left, right] = createShapes(40);\n  const [leftFast, rightFast] = createShapes(40);\n\n  return (\n    <div className={STYLES.App}>\n      <TransformContainer rotate={-10} top=\"50px\" left=\"50px\">\n        <TransformContainer top=\"-30px\">\n          <AutoScroller\n            width=\"1500px\"\n            height=\"120px\"\n            leftChildren={left}\n            rightChildren={right}\n          />\n        </TransformContainer>\n        <AutoScroller\n          width=\"1500px\"\n          height=\"80px\"\n          leftChildren={leftFast}\n          rightChildren={rightFast}\n          fast\n        />\n        <TransformContainer skew={-5}>\n          <Logo text=\"GAME\\n&nbsp;&nbsp;&nbsp;-A-THON\" />\n        </TransformContainer>\n      </TransformContainer>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}